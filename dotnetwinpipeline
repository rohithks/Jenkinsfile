pipeline {
 agent any
 environment {
  dotnet = 'C:\Users\rohithks\Desktop\vs_community.exe'
 }
 stages {
  stage('Checkout') {
   steps {
    //git credentialsId: 'userId', url: 'https://github.com/NeelBhatt/SampleCliApp', branch: 'master'
    checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '21dcef66-4390-4b26-8345-bdce1adc6a5d', url: 'https://github.com/rohithks/dotnet-project.git']]])

   }
  }
  stage('Restore PACKAGES') {
   steps {
   // bat "dotnet restore"
      bat "\"${env.Nuget_Path}\" restore 1-hello-world"
   }
  }
 
  stage('Build') {
   steps {
   // bat 'dotnet build --configuration Release'
       bat "C:\Users\rohithks\Desktop\vs_community.exe\ 1-hello-world\\1-hello-world.sln /t:Rebuild /p:DeployOnBuild=true /p:PackageAsSingleFile=true /p:platform=\"any cpu\" /p:configuration=\"release\"
   }
  }
  stage('Pack') {
   steps {
    bat 'dotnet pack --no-build --output nupkgs'
   }
  }
  stage('Publish') {
   steps {
    bat "dotnet nuget push **\\nupkgs\\*.nupkg -k yourApiKey -s            http://myserver/artifactory/api/nuget/nuget-internal-stable/com/sample"
   }
  }
 }
}
