pipeline {
 agent any
 environment {
  dotnet = "${tool 'MSBuild15_Path'}"
 }
 stages {
  stage('Checkout') {
   steps {
    //git credentialsId: 'userId', url: 'https://github.com/NeelBhatt/SampleCliApp', branch: 'master'
    checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '21dcef66-4390-4b26-8345-bdce1adc6a5d', url: 'https://github.com/rohithks/dotnet-project.git']]])

   }
  }
  stage('Restore PACKAGES') {
   steps {
    bat 'echo "restoring Package"'
   // bat "dotnet restore"
    bat "\"${env.Nuget_Path}\" restore 1-hello-world"
   }
  }
  
  stage('Artifactory Upload') {
   steps {
    //bat "dotnet nuget push **\\nupkgs\\*.nupkg -k yourApiKey -s http://myserver/artifactory/api/nuget/nuget-internal-stable/com/sample"
              script { 
                 def server = Artifactory.server 'Artifactory'
                 def uploadSpec = """{
                    "files": [{
                       "pattern": "path/",
                       "target": "path/"
                    }]
                 }"""

                 server.upload(uploadSpec) 
                     
 }
  }
 }
}
